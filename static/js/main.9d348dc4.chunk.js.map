{"version":3,"sources":["assets/bg-image.png","hooks/useInputState.js","reducers/todo.reducer.js","contexts/todos.context.js","hooks/useLocalStorageReducer.js","components/EditTodoForm/EditTodoForm.js","components/Todo/Todo.js","hooks/useToggleState.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","components/Cockpit/TodoApp.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","useInputState","initialVal","_useState","useState","_useState2","Object","slicedToArray","value","setValue","e","target","todoReducer","state","action","type","newTask","concat","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","key","defaultVal","reducer","_useReducer","useReducer","JSON","parse","window","localStorage","getItem","String","console","log","_useReducer2","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","children","EditTodoForm","_ref","toggleEditForm","_useInputState","_useInputState2","handleChange","reset","useContext","onSubmit","preventDefault","className","ListItem","TextField","margin","onChange","fullWidth","autoFocus","ListItemSecondaryAction","IconButton","onClick","Done_default","memo","_useToggleState","initialValue","arguments","length","undefined","setState","prevState","useToggleState","_useToggleState2","isEditing","toggle","EditTodoForm_EditTodoForm","Fragment","Checkbox","tabIndex","checked","ListItemText","style","textDecoration","width","aria-label","Delete_default","Edit_default","TodoList","Paper","List","i","components_Todo_Todo","Divider","TodoForm","inputValue","setInputValue","resetInputValue","label","styles","paperContainer","backgroundImage","Image","height","backgroundSize","backgroundPosition","TodoApp","palette","theme","setTheme","muiTheme","createMuiTheme","MuiThemeProvider","elevation","AppBar","position","Toolbar","color","Typography","Switch","newPaletteType","Grid","container","justify","item","xs","m","lg","components_TodoForm_TodoForm","App","TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9d348dc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-image.f8057315.png\";","import { useState } from 'react';\n\n// This is a custom hook, which gives us ability to reuse this piece of code anyhwere in our app\n\nexport default initialVal => {\n    const [value, setValue] = useState(initialVal);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    };\n\n    const reset = () => {\n        setValue('');\n    };\n\n    return [value, handleChange, reset];\n};\n","import uuid from 'uuid/v4';\n\nexport default function todoReducer(state, action) {\n    switch (action.type) {\n        case 'ADD':\n            if (action.newTask) {\n                return [\n                    ...state,\n                    { id: uuid(), task: action.newTask, completed: false }\n                ];\n            }\n            return state;\n        case 'REMOVE':\n            return state.filter(todo => todo.id !== action.id);\n\n        case 'TOGGLE':\n            return state.map(todo =>\n                todo.id === action.id\n                    ? { ...todo, completed: !todo.completed }\n                    : todo\n            );\n        case 'EDIT':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, task: action.newTask } : todo\n            );\n\n        default:\n            return state;\n    }\n}\n","import React, { createContext } from 'react';\nimport todoReducer from '../reducers/todo.reducer';\nimport { useLocalStorageReducer } from '../hooks/useLocalStorageReducer';\n\nconst defaultTodos = [\n    { id: 1, task: 'Create State component', completed: false },\n    { id: 2, task: 'Create React Hooks', completed: true },\n    { id: 3, task: 'Grow Beard', completed: false }\n];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n    const [todos, dispatch] = useLocalStorageReducer(\n        'todos',\n        defaultTodos,\n        todoReducer\n    );\n\n    return (\n        <TodosContext.Provider value={todos}>\n            <DispatchContext.Provider value={dispatch}>\n                {props.children}\n            </DispatchContext.Provider>\n        </TodosContext.Provider>\n    );\n}\n","import { useReducer, useEffect } from 'react';\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n    const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let value;\n        try {\n            value = JSON.parse(\n                window.localStorage.getItem(key) || String(defaultVal)\n            );\n        } catch (e) {\n            value = defaultVal;\n        }\n        console.log('USING', value);\n        return value;\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [state]);\n    return [state, dispatch];\n}\nexport { useLocalStorageReducer };\n","import React, { useContext } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneButton from '@material-ui/icons/Done';\nimport useInputState from '../../hooks/useInputState';\nimport './EditTodoForm.css';\nimport { DispatchContext } from '../../contexts/todos.context';\n\nexport default function EditTodoForm({ id, task, toggleEditForm }) {\n    const [value, handleChange, reset] = useInputState(task);\n    const dispatch = useContext(DispatchContext);\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault();\n                dispatch({ type: 'EDIT', id: id, newTask: value });\n                reset();\n                toggleEditForm();\n            }}\n            className=\"EditTodoForm\"\n        >\n            <ListItem>\n                <TextField\n                    margin=\"normal\"\n                    value={value}\n                    onChange={handleChange}\n                    fullWidth\n                    autoFocus\n                />\n            </ListItem>\n            <ListItemSecondaryAction>\n                <IconButton onClick={toggleEditForm}>\n                    <DoneButton />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </form>\n    );\n}\n","import React, { useContext, memo } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport useToggleState from '../../hooks/useToggleState';\nimport EditTodoForm from '../EditTodoForm/EditTodoForm';\nimport './Todo.css';\nimport { DispatchContext } from '../../contexts/todos.context';\n\nfunction Todo({ id, task, completed }) {\n    const [isEditing, toggle] = useToggleState();\n    const dispatch = useContext(DispatchContext);\n    return (\n        <ListItem className=\"TodoListItem\">\n            {isEditing ? (\n                <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n            ) : (\n                <>\n                    <Checkbox\n                        tabIndex={-1}\n                        checked={completed}\n                        onClick={() => dispatch({ type: 'TOGGLE', id: id })}\n                    />\n                    <ListItemText\n                        style={{\n                            textDecoration: completed ? 'line-through' : 'none',\n                            width: '90%'\n                        }}\n                    >\n                        {task}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton\n                            onClick={() => dispatch({ type: 'REMOVE', id: id })}\n                            aria-label=\"Delete\"\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"Edit\" onClick={toggle}>\n                            <EditIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </>\n            )}\n        </ListItem>\n    );\n}\nexport default memo(Todo);\n","import { useState } from 'react';\n\nexport default function useToggle(initialValue = false) {\n    // call useState, 'reserve piece of state'\n    const [state, setState] = useState(initialValue);\n\n    const toggle = () => {\n        setState(prevState => !prevState);\n    };\n\n    return [state, toggle];\n}\n","import React, { useContext } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Todo from '../Todo/Todo';\nimport { TodosContext } from '../../contexts/todos.context';\n\nexport default function TodoList(props) {\n    const todos = useContext(TodosContext);\n\n    if (todos.length) {\n        return (\n            <Paper>\n                <List>\n                    {todos.map((todo, i) => (\n                        <React.Fragment key={todo.id}>\n                            <Todo {...todo} />\n                            {i < todos.length - 1 && <Divider />}\n                        </React.Fragment>\n                    ))}\n                </List>\n            </Paper>\n        );\n    }\n    return null;\n}\n","import React, { useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport useInputState from '../../hooks/useInputState';\nimport './TodoForm.css';\nimport { DispatchContext } from '../../contexts/todos.context';\n\nconst TodoForm = props => {\n    const [inputValue, setInputValue, resetInputValue] = useInputState('');\n    const dispatch = useContext(DispatchContext);\n    return (\n        <Paper className=\"TodoForm\">\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    dispatch({ type: 'ADD', newTask: inputValue });\n                    resetInputValue();\n                }}\n            >\n                <TextField\n                    fullWidth\n                    label=\"Add New Todo\"\n                    className=\"TextField\"\n                    value={inputValue}\n                    onChange={setInputValue}\n                />\n            </form>\n        </Paper>\n    );\n};\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport './TodoApp.css';\nimport TodoList from '../TodoList/TodoList';\nimport TodoForm from '../TodoForm/TodoForm';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Image from '../../assets/bg-image.png'; // Import using relative path\nimport { TodosProvider } from '../../contexts/todos.context';\n\nconst styles = {\n    paperContainer: {\n        backgroundImage: `url(${Image})`,\n        height: '100vh',\n        backgroundSize: 'cover',\n        backgroundPosition: 'top'\n    }\n};\n\nexport default function TodoApp() {\n    // We keep the theme in app state\n    const [theme, setTheme] = useState({\n        palette: {\n            type: 'light'\n        }\n    });\n\n    // we change the palette type of the theme in state\n    const toggleDarkTheme = () => {\n        const newPaletteType =\n            theme.palette.type === 'light' ? 'dark' : 'light';\n        setTheme({\n            palette: {\n                type: newPaletteType\n            }\n        });\n    };\n\n    // we generate a MUI-theme from state's theme object\n    const muiTheme = createMuiTheme(theme);\n\n    return (\n        <div>\n            <MuiThemeProvider theme={muiTheme}>\n                <Paper\n                    elevation={0}\n                    style={styles.paperContainer}\n                    className=\"TodoApp\"\n                >\n                    <AppBar position=\"static\" className=\"AppBar\">\n                        <Toolbar color=\"inherit\">\n                            <Typography>React Todo with Material-UI</Typography>\n                            <ListItemSecondaryAction>\n                                Use Dark Mode\n                                <Switch\n                                    checked={theme.palette.type === 'dark'}\n                                    onChange={toggleDarkTheme}\n                                />\n                            </ListItemSecondaryAction>\n                        </Toolbar>\n                    </AppBar>\n                    <Grid container justify=\"center\" className=\"AppGrid\">\n                        <Grid item xs={11} m={8} lg={4}>\n                            <TodosProvider>\n                                <TodoForm />\n                                <TodoList />\n                            </TodosProvider>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n","import React from 'react';\nimport TodoApp from './components/Cockpit/TodoApp';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TodoApp />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}